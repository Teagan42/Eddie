{
  "openapi": "3.0.0",
  "paths": {
    "/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Liveness state"
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/health/ready": {
      "get": {
        "operationId": "HealthController_readiness",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Readiness state"
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/chat-sessions": {
      "get": {
        "operationId": "ChatSessionsController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatSessionDto"
                  }
                }
              }
            }
          }
        },
        "summary": "List chat sessions",
        "tags": [
          "chat-sessions"
        ]
      },
      "post": {
        "operationId": "ChatSessionsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChatSessionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatSessionDto"
                }
              }
            }
          }
        },
        "summary": "Create a new chat session",
        "tags": [
          "chat-sessions"
        ]
      }
    },
    "/chat-sessions/{id}": {
      "get": {
        "operationId": "ChatSessionsController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatSessionDto"
                }
              }
            }
          }
        },
        "summary": "Fetch a single chat session",
        "tags": [
          "chat-sessions"
        ]
      },
      "patch": {
        "operationId": "chatSessionsControllerRename",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChatSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatSessionDto"
                }
              }
            }
          }
        },
        "summary": "Rename a chat session",
        "tags": [
          "chat-sessions"
        ]
      },
      "delete": {
        "operationId": "chatSessionsControllerDelete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a chat session",
        "tags": [
          "chat-sessions"
        ]
      }
    },
    "/chat-sessions/{id}/archive": {
      "patch": {
        "operationId": "ChatSessionsController_archive",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatSessionDto"
                }
              }
            }
          }
        },
        "summary": "Archive a chat session",
        "tags": [
          "chat-sessions"
        ]
      }
    },
    "/chat-sessions/{id}/messages": {
      "get": {
        "operationId": "ChatSessionsController_listMessages",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatMessageDto"
                  }
                }
              }
            }
          }
        },
        "summary": "List session messages",
        "tags": [
          "chat-sessions"
        ]
      },
      "post": {
        "operationId": "ChatSessionsController_createMessage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChatMessageDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatMessageDto"
                }
              }
            }
          }
        },
        "summary": "Append a message to the session",
        "tags": [
          "chat-sessions"
        ]
      }
    },
    "/traces": {
      "get": {
        "operationId": "TracesController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TraceDto"
                  }
                }
              }
            }
          }
        },
        "summary": "List traces",
        "tags": [
          "traces"
        ]
      }
    },
    "/traces/{id}": {
      "get": {
        "operationId": "TracesController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TraceDto"
                }
              }
            }
          }
        },
        "summary": "Get a trace",
        "tags": [
          "traces"
        ]
      }
    },
    "/logs": {
      "get": {
        "operationId": "LogsController_list",
        "parameters": [
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogEntryDto"
                  }
                }
              }
            }
          }
        },
        "summary": "List log entries",
        "tags": [
          "logs"
        ]
      },
      "post": {
        "operationId": "LogsController_emit",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntryDto"
                }
              }
            }
          }
        },
        "summary": "Append a diagnostic log",
        "tags": [
          "logs"
        ]
      }
    },
    "/config": {
      "get": {
        "operationId": "RuntimeConfigController_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeConfigDto"
                }
              }
            }
          }
        },
        "summary": "Get runtime configuration",
        "tags": [
          "config"
        ]
      },
      "patch": {
        "operationId": "RuntimeConfigController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRuntimeConfigDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeConfigDto"
                }
              }
            }
          }
        },
        "summary": "Update runtime configuration",
        "tags": [
          "config"
        ]
      }
    },
    "/config/schema": {
      "get": {
        "operationId": "ConfigEditorController_getSchema",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigSchemaDto"
                }
              }
            }
          }
        },
        "summary": "Get Eddie configuration schema.",
        "tags": [
          "config"
        ]
      }
    },
    "/config/editor": {
      "get": {
        "operationId": "ConfigEditorController_getSource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigSourceDto"
                }
              }
            }
          }
        },
        "summary": "Get the current Eddie configuration source.",
        "tags": [
          "config"
        ]
      },
      "put": {
        "operationId": "ConfigEditorController_save",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigSourcePayloadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigSourceDto"
                }
              }
            }
          }
        },
        "summary": "Persist an Eddie configuration payload.",
        "tags": [
          "config"
        ]
      }
    },
    "/config/editor/preview": {
      "post": {
        "operationId": "ConfigEditorController_preview",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigSourcePayloadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigPreviewDto"
                }
              }
            }
          }
        },
        "summary": "Preview an Eddie configuration payload.",
        "tags": [
          "config"
        ]
      }
    },
    "/providers/catalog": {
      "get": {
        "operationId": "ProvidersController_listCatalog",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProviderCatalogEntryDto"
                  }
                }
              }
            }
          }
        },
        "summary": "List supported providers and available models.",
        "tags": [
          "Providers"
        ]
      }
    }
  },
  "info": {
    "title": "Eddie API",
    "description": "REST and WebSocket surface for the Eddie control plane",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Chat Sessions",
      "description": ""
    },
    {
      "name": "Traces",
      "description": ""
    },
    {
      "name": "Logs",
      "description": ""
    },
    {
      "name": "Runtime Config",
      "description": ""
    },
    {
      "name": "Config",
      "description": ""
    },
    {
      "name": "Providers",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "ChatSessionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "title": {
            "type": "string",
            "description": "Human friendly title"
          },
          "description": {
            "type": "string",
            "description": "Optional description"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "archived"
            ],
            "description": "Session status"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp (ISO string)"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update timestamp (ISO string)"
          }
        },
        "required": [
          "id",
          "title",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateChatSessionDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Human friendly session title"
          },
          "description": {
            "type": "string",
            "description": "Optional description rendered in dashboards"
          }
        },
        "required": [
          "title"
        ]
      },
      "UpdateChatSessionDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Updated session title"
          },
          "description": {
            "type": "object",
            "description": "Updated session description"
          }
        }
      },
      "ChatMessageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "sessionId": {
            "type": "string",
            "description": "Owning session id"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "assistant",
              "system",
              "tool"
            ],
            "description": "Message role"
          },
          "content": {
            "type": "string",
            "description": "Message content"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp (ISO string)"
          },
          "toolCallId": {
            "type": "string",
            "description": "Identifier of the originating tool call"
          },
          "name": {
            "type": "string",
            "description": "Originating tool name"
          }
        },
        "required": [
          "id",
          "sessionId",
          "role",
          "content",
          "createdAt"
        ]
      },
      "CreateChatMessageDto": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "user",
              "assistant",
              "system",
              "tool"
            ],
            "default": "user"
          },
          "content": {
            "type": "string",
            "description": "Content of the chat message"
          },
          "toolCallId": {
            "type": "string",
            "description": "Identifier of the originating tool call"
          },
          "name": {
            "type": "string",
            "description": "Originating tool name"
          }
        },
        "required": [
          "role",
          "content"
        ]
      },
      "TraceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Trace identifier"
          },
          "sessionId": {
            "type": "string",
            "description": "Related chat session id"
          },
          "name": {
            "type": "string",
            "description": "Trace name"
          },
          "status": {
            "type": "string",
            "description": "Trace status",
            "enum": [
              "pending",
              "running",
              "completed",
              "failed"
            ]
          },
          "durationMs": {
            "type": "number",
            "description": "Duration in milliseconds"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update timestamp"
          },
          "metadata": {
            "type": "object",
            "description": "Structured metadata"
          }
        },
        "required": [
          "id",
          "name",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "LogEntryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Log identifier"
          },
          "level": {
            "type": "string",
            "description": "Log level"
          },
          "message": {
            "type": "string",
            "description": "Log message"
          },
          "context": {
            "type": "object",
            "description": "Structured context"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp"
          }
        },
        "required": [
          "id",
          "level",
          "message",
          "createdAt"
        ]
      },
      "RuntimeConfigDto": {
        "type": "object",
        "properties": {
          "apiUrl": {
            "type": "string",
            "description": "Public HTTP API URL"
          },
          "websocketUrl": {
            "type": "string",
            "description": "Public WebSocket URL"
          },
          "features": {
            "type": "object",
            "description": "Feature flags"
          },
          "theme": {
            "type": "string",
            "description": "Active theme",
            "enum": [
              "light",
              "dark"
            ]
          }
        },
        "required": [
          "apiUrl",
          "websocketUrl",
          "features",
          "theme"
        ]
      },
      "UpdateRuntimeConfigDto": {
        "type": "object",
        "properties": {
          "apiUrl": {
            "type": "string",
            "description": "Public HTTP API URL"
          },
          "websocketUrl": {
            "type": "string",
            "description": "Public WebSocket URL"
          },
          "features": {
            "type": "object",
            "description": "Feature flags"
          },
          "theme": {
            "type": "string",
            "description": "Active theme",
            "enum": [
              "light",
              "dark"
            ]
          }
        }
      },
      "ConfigSchemaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the schema bundle."
          },
          "version": {
            "type": "string",
            "description": "Semantic version of the schema bundle."
          },
          "schema": {
            "type": "object",
            "description": "JSON Schema describing the resolved Eddie configuration.",
            "additionalProperties": true
          },
          "inputSchema": {
            "type": "object",
            "description": "JSON Schema describing the configuration file input.",
            "additionalProperties": true
          }
        },
        "required": [
          "id",
          "version",
          "schema",
          "inputSchema"
        ]
      },
      "ConfigSourceDto": {
        "type": "object",
        "properties": {
          "path": {
            "type": "object",
            "description": "Absolute path to the configuration file when available.",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "Format used for the configuration file.",
            "enum": [
              "yaml",
              "json"
            ]
          },
          "content": {
            "type": "string",
            "description": "Raw configuration source."
          },
          "input": {
            "type": "object",
            "description": "Parsed configuration input object.",
            "additionalProperties": true
          },
          "config": {
            "type": "object",
            "description": "Resolved Eddie configuration.",
            "additionalProperties": true,
            "nullable": true
          },
          "error": {
            "type": "object",
            "description": "Configuration validation error when the source cannot be composed.",
            "nullable": true
          }
        },
        "required": [
          "path",
          "format",
          "content",
          "input"
        ]
      },
      "ConfigSourcePayloadDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Configuration source contents."
          },
          "format": {
            "type": "string",
            "description": "Format of the configuration payload.",
            "enum": [
              "yaml",
              "json"
            ]
          },
        },
        "required": [
          "content",
          "format"
        ]
      },
      "ConfigPreviewDto": {
        "type": "object",
        "properties": {
          "input": {
            "type": "object",
            "description": "Parsed configuration input object.",
            "additionalProperties": true
          },
          "config": {
            "type": "object",
            "description": "Resolved Eddie configuration.",
            "additionalProperties": true
          }
        },
        "required": [
          "input",
          "config"
        ]
      },
      "ProviderCatalogEntryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Provider identifier",
            "example": "openai"
          },
          "label": {
            "type": "string",
            "description": "Human-friendly provider label",
            "example": "OpenAI",
            "nullable": true
          },
          "models": {
            "description": "Models available for the provider",
            "example": [
              "gpt-4o",
              "gpt-4o-mini"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "models"
        ]
      }
    }
  }
}