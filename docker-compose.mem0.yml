services:
  mem0:
    build:
      context: ..
      dockerfile: server/dev.Dockerfile
    ports:
      - "8888:8000"
    env_file:
      - .env
    networks:
      - mem0_network
    volumes:
      - ./history:/app/history
      - .:/app
      - ../mem0:/app/packages/mem0
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: mem0
      POSTGRES_USER: mem0
      POSTGRES_PASSWORD: mem0
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mem0_network

  neo4j:
    image: neo4j:5.26.4
    networks:
      - mem0_network
    healthcheck:
      test: wget http://localhost:7687 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 90s
    ports:
      - "8474:7474"
      - "8687:7687"
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/mem0graph
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true

  qdrant:
    image: qdrant/qdrant:v1.11.0
    ports:
      - "6333:6333"
      - "6334:6334"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:6333/readyz"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s
    volumes:
      - qdrant:/qdrant/storage
    networks:
      - mem0_network

volumes:
  postgres_data:
  neo4j_data:
  qdrant:

networks:
  mem0_network:
    driver: bridge
